const long long INF = 1e16;
vector<vector<pair<long long,long long> > > gr;//adjacency lists of pairs {weight,vertex}
vector<long long> dist,pars;
void dijkstra(long long st)
{
	priority_queue<pair<long long, long long > > A;
	dist.assign(gr.size(), INF);
	dist[st] = 0;
	pars.assign(gr.size(), -1);
	A.push(make_pair(dist[st], st));
	while (!A.empty())
	{
		pair<long long,long long> tp= A.top();
		A.pop();
		long long d = tp.first, v = tp.second;
		if (d > dist[v])
		{
			continue;
		}
		for (auto& y : gr[v])
		{
			if (dist[y.second] > dist[v] + y.first)
			{
				dist[y.second] = dist[v] + y.first;
				pars[y.second] = v;
				A.push(make_pair(dist[y.second], y.second));
			}
		}
	}
}
